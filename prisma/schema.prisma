// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int            @id @default(autoincrement())
  session       Session?
  email         String         @unique
  name          String?
  password      String
  accounts      AccountUsers[]
  Account       Account[]
  isGlobalAdmin Boolean        @default(false)
}

model Session {
  id         Int    @id @default(autoincrement())
  userId     Int    @unique
  user       User   @relation(fields: [userId], references: [id])
  sessionKey String @unique
}

model Account {
  id         Int            @id @default(autoincrement())
  name       String
  admin      User           @relation(fields: [adminId], references: [id])
  adminId    Int
  moderators AccountUsers[]
  commands   Command[]
}

model AccountUsers {
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
  account    Account  @relation(fields: [accountId], references: [id])
  accountId  Int
  assignedAt DateTime @default(now())
  assignedBy String

  @@id([userId, accountId])
}

model Command {
  id        Int      @id @default(autoincrement())
  account   Account  @relation(fields: [accountId], references: [id])
  accountId Int
  name      String
  Action    Action[]
}

model Action {
  id        Int     @id @default(autoincrement())
  command   Command @relation(fields: [commandId], references: [id])
  commandId Int
  type      String
  content   String
}

model Token {
  email     String
  token     String   @unique
  type      String
  expiry    DateTime
  accountId Int?

  @@id([email, type])
}

model ApiUser {
  id              Int    @id @default(autoincrement())
  username        String @unique
  password        String
  discriminator   String
  webhookUrl      String @default("")
  webhookServerId String @default("")
}
